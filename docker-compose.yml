version: '3.8'

services:
  # Frontend Service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - HOST=0.0.0.0
      - BROWSER=none
    depends_on:
      - api-gateway
    networks:
      - app-network

  # API Gateway Service
  api-gateway:
    build: ./api-gateway
    ports:
      - "4000:4000"
    depends_on:
      - auth-service
      - restaurant-service
      - client-service
      - delivery-service
    environment:
      - AUTH_SERVICE_URL=http://auth-service:5000
      - RESTAURANT_SERVICE_URL=http://restaurant-service:5001
      - CLIENT_SERVICE_URL=http://client-service:5002
      - DELIVERY_SERVICE_URL=http://delivery-service:5003
      - JWT_SECRET=your_secret_key_change_in_production
    networks:
      - app-network

  # Authentication Service
  auth-service:
    build: ./auth-service
    ports:
      - "5000:5000"
    depends_on:
      - auth-db
    environment:
      - MONGODB_URI=mongodb://auth-db:27017/auth
      - JWT_SECRET=your_secret_key_change_in_production
    networks:
      - app-network

  # Authentication Database (MongoDB)
  auth-db:
    image: mongo:latest
    volumes:
      - auth-db-data:/data/db
      - ./auth-service/init-mongo:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # Restaurant Service
  restaurant-service:
    build: ./restaurant-service
    ports:
      - "5001:5001"
    depends_on:
      - restaurant-db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@restaurant-db:5432/restaurant
    networks:
      - app-network

  # Restaurant Database (PostgreSQL)
  restaurant-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=restaurant
    volumes:
      - restaurant-db-data:/var/lib/postgresql/data
      - ./restaurant-service/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # Client Service
  client-service:
    build: ./client-service
    ports:
      - "5002:5002"
    depends_on:
      - client-db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@client-db:5432/client
    networks:
      - app-network

  # Client Database (PostgreSQL)
  client-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=client
    volumes:
      - client-db-data:/var/lib/postgresql/data
      - ./client-service/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # Delivery Service
  delivery-service:
    build: ./delivery-service
    ports:
      - "5003:5003"
    depends_on:
      - delivery-db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@delivery-db:5432/delivery
    networks:
      - app-network

  # Delivery Database (PostgreSQL)
  delivery-db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=delivery
    volumes:
      - delivery-db-data:/var/lib/postgresql/data
      - ./delivery-service/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  # Logs Database (MongoDB)
  logs-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - logs-db-data:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  auth-db-data:
  restaurant-db-data:
  client-db-data:
  delivery-db-data:
  logs-db-data: