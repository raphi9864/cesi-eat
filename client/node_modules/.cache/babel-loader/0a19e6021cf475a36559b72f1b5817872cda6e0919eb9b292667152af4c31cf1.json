{"ast":null,"code":"import axios from 'axios';\n\n// Cr√©er une instance d'Axios avec une configuration par d√©faut\nconst api = axios.create({\n  baseURL: '/api',\n  // Utiliser une URL relative qui sera dirig√©e par notre proxy Nginx\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercepteur de requ√™te pour ajouter le token d'authentification\napi.interceptors.request.use(config => {\n  console.log(`üöÄ Requ√™te envoy√©e vers: ${config.method.toUpperCase()} ${config.url}`);\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('‚ùå Erreur lors de la requ√™te:', error);\n  return Promise.reject(error);\n});\n\n// Intercepteur de r√©ponse pour g√©rer les erreurs communes\napi.interceptors.response.use(response => {\n  console.log(`‚úÖ R√©ponse re√ßue de: ${response.config.url} (${response.status})`);\n  return response;\n}, error => {\n  if (error.response) {\n    // La requ√™te a √©t√© faite et le serveur a r√©pondu avec un code d'√©tat\n    console.error(`‚ùå Erreur API (${error.response.status}):`, error.response.data);\n\n    // Redirection vers la page de connexion en cas d'erreur d'authentification\n    if (error.response.status === 401) {\n      console.warn('üîí Session expir√©e ou non autoris√©e, redirection vers la page de connexion');\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n  } else if (error.request) {\n    // La requ√™te a √©t√© faite mais aucune r√©ponse n'a √©t√© re√ßue\n    console.error('‚ùå Aucune r√©ponse re√ßue du serveur:', error.request);\n  } else {\n    // Une erreur s'est produite lors de la configuration de la requ√™te\n    console.error('‚ùå Erreur lors de la configuration de la requ√™te:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","data","warn","removeItem","window","location","href","message"],"sources":["/home/rapha/dev/delivery_app/client/src/api/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Cr√©er une instance d'Axios avec une configuration par d√©faut\nconst api = axios.create({\n  baseURL: '/api', // Utiliser une URL relative qui sera dirig√©e par notre proxy Nginx\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Intercepteur de requ√™te pour ajouter le token d'authentification\napi.interceptors.request.use(\n  (config) => {\n    console.log(`üöÄ Requ√™te envoy√©e vers: ${config.method.toUpperCase()} ${config.url}`);\n    \n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    console.error('‚ùå Erreur lors de la requ√™te:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Intercepteur de r√©ponse pour g√©rer les erreurs communes\napi.interceptors.response.use(\n  (response) => {\n    console.log(`‚úÖ R√©ponse re√ßue de: ${response.config.url} (${response.status})`);\n    return response;\n  },\n  (error) => {\n    if (error.response) {\n      // La requ√™te a √©t√© faite et le serveur a r√©pondu avec un code d'√©tat\n      console.error(`‚ùå Erreur API (${error.response.status}):`, error.response.data);\n      \n      // Redirection vers la page de connexion en cas d'erreur d'authentification\n      if (error.response.status === 401) {\n        console.warn('üîí Session expir√©e ou non autoris√©e, redirection vers la page de connexion');\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    } else if (error.request) {\n      // La requ√™te a √©t√© faite mais aucune r√©ponse n'a √©t√© re√ßue\n      console.error('‚ùå Aucune r√©ponse re√ßue du serveur:', error.request);\n    } else {\n      // Une erreur s'est produite lors de la configuration de la requ√™te\n      console.error('‚ùå Erreur lors de la configuration de la requ√™te:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAAC,4BAA4BF,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,IAAIJ,MAAM,CAACK,GAAG,EAAE,CAAC;EAEpF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTN,MAAM,CAACJ,OAAO,CAACa,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAON,MAAM;AACf,CAAC,EACAU,KAAK,IAAK;EACTT,OAAO,CAACS,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACpD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAlB,GAAG,CAACK,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAC1Bc,QAAQ,IAAK;EACZZ,OAAO,CAACC,GAAG,CAAC,uBAAuBW,QAAQ,CAACb,MAAM,CAACK,GAAG,KAAKQ,QAAQ,CAACC,MAAM,GAAG,CAAC;EAC9E,OAAOD,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACAZ,OAAO,CAACS,KAAK,CAAC,iBAAiBA,KAAK,CAACG,QAAQ,CAACC,MAAM,IAAI,EAAEJ,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC;;IAE9E;IACA,IAAIL,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjCb,OAAO,CAACe,IAAI,CAAC,4EAA4E,CAAC;MAC1FT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;EACF,CAAC,MAAM,IAAIV,KAAK,CAACZ,OAAO,EAAE;IACxB;IACAG,OAAO,CAACS,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACZ,OAAO,CAAC;EACpE,CAAC,MAAM;IACL;IACAG,OAAO,CAACS,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAACW,OAAO,CAAC;EAClF;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}