{"ast":null,"code":"import api from './api';\n\n// Connexion d'un utilisateur\nconst login = async credentials => {\n  try {\n    const response = await api.post('/users/auth/login', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Inscription d'un nouvel utilisateur\nconst register = async userData => {\n  try {\n    const response = await api.post('/users/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Déconnexion\nconst logout = () => {\n  localStorage.removeItem('token');\n};\n\n// Vérifier si l'utilisateur est connecté\nconst getCurrentUser = async () => {\n  try {\n    const response = await api.get('/users/me');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Mettre à jour le profil utilisateur\nconst updateProfile = async (userId, userData) => {\n  try {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport default {\n  login,\n  register,\n  logout,\n  getCurrentUser,\n  updateProfile\n};","map":{"version":3,"names":["api","login","credentials","response","post","data","token","localStorage","setItem","error","register","userData","logout","removeItem","getCurrentUser","get","updateProfile","userId","put"],"sources":["/home/rapha/dev/delivery_app/client/src/api/authApi.js"],"sourcesContent":["import api from './api';\n\n// Connexion d'un utilisateur\nconst login = async (credentials) => {\n  try {\n    const response = await api.post('/users/auth/login', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Inscription d'un nouvel utilisateur\nconst register = async (userData) => {\n  try {\n    const response = await api.post('/users/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Déconnexion\nconst logout = () => {\n  localStorage.removeItem('token');\n};\n\n// Vérifier si l'utilisateur est connecté\nconst getCurrentUser = async () => {\n  try {\n    const response = await api.get('/users/me');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Mettre à jour le profil utilisateur\nconst updateProfile = async (userId, userData) => {\n  try {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default {\n  login,\n  register,\n  logout,\n  getCurrentUser,\n  updateProfile\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,mBAAmB,EAAEF,WAAW,CAAC;IACjE,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IACpD;IACA,OAAOH,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,sBAAsB,EAAEO,QAAQ,CAAC;IACjE,IAAIR,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IACpD;IACA,OAAOH,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;EACnBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMH,GAAG,CAACe,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMO,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEN,QAAQ,KAAK;EAChD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACkB,GAAG,CAAC,UAAUD,MAAM,EAAE,EAAEN,QAAQ,CAAC;IAC5D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAe;EACbR,KAAK;EACLS,QAAQ;EACRE,MAAM;EACNE,cAAc;EACdE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}