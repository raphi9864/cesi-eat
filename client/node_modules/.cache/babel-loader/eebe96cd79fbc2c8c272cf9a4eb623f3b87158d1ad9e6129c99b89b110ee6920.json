{"ast":null,"code":"import api from'./api';// R√©cup√©rer la liste des restaurants (endpoint public)\nconst getRestaurants=async()=>{try{console.log('üîÑ Envoi de requ√™te vers /restaurants/public');const response=await api.get('/restaurants/public');console.log('üì• R√©ponse re√ßue:',response.data);if(response.data&&response.data.restaurants){return response.data.restaurants;}return response.data;}catch(error){console.error('‚ùå Erreur API restaurantApi.getRestaurants:',error);throw error;}};// R√©cup√©rer les d√©tails d'un restaurant (endpoint public)\nconst getRestaurantById=async id=>{try{const response=await api.get(`/restaurants/public/${id}`);return response.data;}catch(error){console.error(`‚ùå Erreur API restaurantApi.getRestaurantById(${id}):`,error);throw error;}};// R√©cup√©rer les plats d'un restaurant (endpoint public)\nconst getDishesByRestaurantId=async restaurantId=>{try{const response=await api.get(`/dishes/restaurant/${restaurantId}`);return response.data.dishes||response.data;}catch(error){console.error(`‚ùå Erreur API restaurantApi.getDishesByRestaurantId(${restaurantId}):`,error);throw error;}};// R√©cup√©rer les restaurants populaires (endpoint public)\nconst getPopularRestaurants=async()=>{try{const response=await api.get('/restaurants/populaires');return response.data;}catch(error){console.error('‚ùå Erreur API restaurantApi.getPopularRestaurants:',error);throw error;}};// Rechercher des restaurants par crit√®res (endpoint public)\nconst searchRestaurants=async searchParams=>{try{const response=await api.get('/restaurants/public',{params:searchParams});return response.data.restaurants||response.data;}catch(error){console.error('‚ùå Erreur API restaurantApi.searchRestaurants:',error);throw error;}};// Routes prot√©g√©es (n√©cessitent un token)\n// Noter un restaurant\nconst rateRestaurant=async(restaurantId,ratingData)=>{try{const response=await api.post(`/restaurants/${restaurantId}/noter`,ratingData);return response.data;}catch(error){console.error(`‚ùå Erreur API restaurantApi.rateRestaurant(${restaurantId}):`,error);throw error;}};export default{getRestaurants,getRestaurantById,getDishesByRestaurantId,getPopularRestaurants,searchRestaurants,rateRestaurant};","map":{"version":3,"names":["api","getRestaurants","console","log","response","get","data","restaurants","error","getRestaurantById","id","getDishesByRestaurantId","restaurantId","dishes","getPopularRestaurants","searchRestaurants","searchParams","params","rateRestaurant","ratingData","post"],"sources":["/home/rapha/dev/delivery_app/client/src/api/restaurantApi.js"],"sourcesContent":["import api from './api';\n\n// R√©cup√©rer la liste des restaurants (endpoint public)\nconst getRestaurants = async () => {\n  try {\n    console.log('üîÑ Envoi de requ√™te vers /restaurants/public');\n    const response = await api.get('/restaurants/public');\n    console.log('üì• R√©ponse re√ßue:', response.data);\n    \n    if (response.data && response.data.restaurants) {\n      return response.data.restaurants;\n    }\n    return response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.getRestaurants:', error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les d√©tails d'un restaurant (endpoint public)\nconst getRestaurantById = async (id) => {\n  try {\n    const response = await api.get(`/restaurants/public/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.getRestaurantById(${id}):`, error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les plats d'un restaurant (endpoint public)\nconst getDishesByRestaurantId = async (restaurantId) => {\n  try {\n    const response = await api.get(`/dishes/restaurant/${restaurantId}`);\n    return response.data.dishes || response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.getDishesByRestaurantId(${restaurantId}):`, error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les restaurants populaires (endpoint public)\nconst getPopularRestaurants = async () => {\n  try {\n    const response = await api.get('/restaurants/populaires');\n    return response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.getPopularRestaurants:', error);\n    throw error;\n  }\n};\n\n// Rechercher des restaurants par crit√®res (endpoint public)\nconst searchRestaurants = async (searchParams) => {\n  try {\n    const response = await api.get('/restaurants/public', { params: searchParams });\n    return response.data.restaurants || response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.searchRestaurants:', error);\n    throw error;\n  }\n};\n\n// Routes prot√©g√©es (n√©cessitent un token)\n\n// Noter un restaurant\nconst rateRestaurant = async (restaurantId, ratingData) => {\n  try {\n    const response = await api.post(`/restaurants/${restaurantId}/noter`, ratingData);\n    return response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.rateRestaurant(${restaurantId}):`, error);\n    throw error;\n  }\n};\n\nexport default {\n  getRestaurants,\n  getRestaurantById,\n  getDishesByRestaurantId,\n  getPopularRestaurants,\n  searchRestaurants,\n  rateRestaurant\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}