{"ast":null,"code":"import api from './api';\n\n// R√©cup√©rer la liste des restaurants (endpoint public)\nconst getRestaurants = async () => {\n  try {\n    console.log('üîÑ Envoi de requ√™te vers /restaurants/public');\n    const response = await api.get('/restaurants/public');\n    console.log('üì• R√©ponse re√ßue:', response.data);\n    if (response.data && response.data.restaurants) {\n      return response.data.restaurants;\n    }\n    return response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.getRestaurants:', error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les d√©tails d'un restaurant (endpoint public)\nconst getRestaurantById = async id => {\n  try {\n    const response = await api.get(`/restaurants/public/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.getRestaurantById(${id}):`, error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les plats d'un restaurant (endpoint public)\nconst getDishesByRestaurantId = async restaurantId => {\n  try {\n    const response = await api.get(`/dishes/restaurant/${restaurantId}`);\n    return response.data.dishes || response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.getDishesByRestaurantId(${restaurantId}):`, error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les restaurants populaires (endpoint public)\nconst getPopularRestaurants = async () => {\n  try {\n    const response = await api.get('/restaurants/populaires');\n    return response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.getPopularRestaurants:', error);\n    throw error;\n  }\n};\n\n// Rechercher des restaurants par crit√®res (endpoint public)\nconst searchRestaurants = async searchParams => {\n  try {\n    const response = await api.get('/restaurants/public', {\n      params: searchParams\n    });\n    return response.data.restaurants || response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.searchRestaurants:', error);\n    throw error;\n  }\n};\n\n// Routes prot√©g√©es (n√©cessitent un token)\n\n// Noter un restaurant\nconst rateRestaurant = async (restaurantId, ratingData) => {\n  try {\n    const response = await api.post(`/restaurants/${restaurantId}/noter`, ratingData);\n    return response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.rateRestaurant(${restaurantId}):`, error);\n    throw error;\n  }\n};\nexport default {\n  getRestaurants,\n  getRestaurantById,\n  getDishesByRestaurantId,\n  getPopularRestaurants,\n  searchRestaurants,\n  rateRestaurant\n};","map":{"version":3,"names":["api","getRestaurants","console","log","response","get","data","restaurants","error","getRestaurantById","id","getDishesByRestaurantId","restaurantId","dishes","getPopularRestaurants","searchRestaurants","searchParams","params","rateRestaurant","ratingData","post"],"sources":["/home/rapha/dev/delivery_app/client/src/api/restaurantApi.js"],"sourcesContent":["import api from './api';\n\n// R√©cup√©rer la liste des restaurants (endpoint public)\nconst getRestaurants = async () => {\n  try {\n    console.log('üîÑ Envoi de requ√™te vers /restaurants/public');\n    const response = await api.get('/restaurants/public');\n    console.log('üì• R√©ponse re√ßue:', response.data);\n    \n    if (response.data && response.data.restaurants) {\n      return response.data.restaurants;\n    }\n    return response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.getRestaurants:', error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les d√©tails d'un restaurant (endpoint public)\nconst getRestaurantById = async (id) => {\n  try {\n    const response = await api.get(`/restaurants/public/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.getRestaurantById(${id}):`, error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les plats d'un restaurant (endpoint public)\nconst getDishesByRestaurantId = async (restaurantId) => {\n  try {\n    const response = await api.get(`/dishes/restaurant/${restaurantId}`);\n    return response.data.dishes || response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.getDishesByRestaurantId(${restaurantId}):`, error);\n    throw error;\n  }\n};\n\n// R√©cup√©rer les restaurants populaires (endpoint public)\nconst getPopularRestaurants = async () => {\n  try {\n    const response = await api.get('/restaurants/populaires');\n    return response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.getPopularRestaurants:', error);\n    throw error;\n  }\n};\n\n// Rechercher des restaurants par crit√®res (endpoint public)\nconst searchRestaurants = async (searchParams) => {\n  try {\n    const response = await api.get('/restaurants/public', { params: searchParams });\n    return response.data.restaurants || response.data;\n  } catch (error) {\n    console.error('‚ùå Erreur API restaurantApi.searchRestaurants:', error);\n    throw error;\n  }\n};\n\n// Routes prot√©g√©es (n√©cessitent un token)\n\n// Noter un restaurant\nconst rateRestaurant = async (restaurantId, ratingData) => {\n  try {\n    const response = await api.post(`/restaurants/${restaurantId}/noter`, ratingData);\n    return response.data;\n  } catch (error) {\n    console.error(`‚ùå Erreur API restaurantApi.rateRestaurant(${restaurantId}):`, error);\n    throw error;\n  }\n};\n\nexport default {\n  getRestaurants,\n  getRestaurantById,\n  getDishesByRestaurantId,\n  getPopularRestaurants,\n  searchRestaurants,\n  rateRestaurant\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}