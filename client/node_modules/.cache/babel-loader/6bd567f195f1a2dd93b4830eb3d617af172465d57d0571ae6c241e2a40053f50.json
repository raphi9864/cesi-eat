{"ast":null,"code":"import api from'./api';// Connexion d'un utilisateur\nconst login=async credentials=>{try{const response=await api.post('/users/auth/login',credentials);if(response.data.token){localStorage.setItem('token',response.data.token);}return response.data;}catch(error){throw error;}};// Inscription d'un nouvel utilisateur\nconst register=async userData=>{try{const response=await api.post('/users/auth/register',userData);if(response.data.token){localStorage.setItem('token',response.data.token);}return response.data;}catch(error){throw error;}};// Déconnexion\nconst logout=()=>{localStorage.removeItem('token');};// Vérifier si l'utilisateur est connecté\nconst getCurrentUser=async()=>{try{const response=await api.get('/users/me');return response.data;}catch(error){throw error;}};// Mettre à jour le profil utilisateur\nconst updateProfile=async(userId,userData)=>{try{const response=await api.put(`/users/${userId}`,userData);return response.data;}catch(error){throw error;}};export default{login,register,logout,getCurrentUser,updateProfile};","map":{"version":3,"names":["api","login","credentials","response","post","data","token","localStorage","setItem","error","register","userData","logout","removeItem","getCurrentUser","get","updateProfile","userId","put"],"sources":["/home/rapha/dev/delivery_app/client/src/api/authApi.js"],"sourcesContent":["import api from './api';\n\n// Connexion d'un utilisateur\nconst login = async (credentials) => {\n  try {\n    const response = await api.post('/users/auth/login', credentials);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Inscription d'un nouvel utilisateur\nconst register = async (userData) => {\n  try {\n    const response = await api.post('/users/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Déconnexion\nconst logout = () => {\n  localStorage.removeItem('token');\n};\n\n// Vérifier si l'utilisateur est connecté\nconst getCurrentUser = async () => {\n  try {\n    const response = await api.get('/users/me');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Mettre à jour le profil utilisateur\nconst updateProfile = async (userId, userData) => {\n  try {\n    const response = await api.put(`/users/${userId}`, userData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport default {\n  login,\n  register,\n  logout,\n  getCurrentUser,\n  updateProfile\n}; "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB;AACA,KAAM,CAAAC,KAAK,CAAG,KAAO,CAAAC,WAAW,EAAK,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,mBAAmB,CAAEF,WAAW,CAAC,CACjE,GAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CACpD,CACA,MAAO,CAAAH,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOI,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACnC,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,sBAAsB,CAAEO,QAAQ,CAAC,CACjE,GAAIR,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CACpD,CACA,MAAO,CAAAH,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOI,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACe,GAAG,CAAC,WAAW,CAAC,CAC3C,MAAO,CAAAZ,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOI,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAO,aAAa,CAAG,KAAAA,CAAOC,MAAM,CAAEN,QAAQ,GAAK,CAChD,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACkB,GAAG,CAAC,UAAUD,MAAM,EAAE,CAAEN,QAAQ,CAAC,CAC5D,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOI,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,cAAe,CACbR,KAAK,CACLS,QAAQ,CACRE,MAAM,CACNE,cAAc,CACdE,aACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}